{"version":3,"sources":["components/home.jsx","redux/constants.js","redux/actions.js","components/addShop.jsx","components/navbar.jsx","components/shopList.jsx","components/viewShops.jsx","App.js","redux/reducers/areaFilterReducer.js","redux/reducers/categoryFilterReducer.js","redux/reducers/statusFilterReducer.js","redux/reducers/setShopDataReducer.js","redux/reducers/shopDataArrayReducer.js","redux/reducers/rootReducer.js","index.js"],"names":["Home","history","useHistory","className","onClick","push","SHOP_DATA","SHOP_DATA_ARRAY","SHOP_DATA_ARRAY_DELETE","AREA_FILTER","CATEGORY_FILTER","STATUS_FILTER","RESET_DATA","setshopdata","obj","type","payload","AddShop","dispatch","useDispatch","data","useSelector","state","shopData","console","log","useState","formErrors","setFormErrors","handleSubmit","e","preventDefault","shop_name","area","category","opening_date","closing_date","isformValid","match","handleformvalidation","alert","htmlFor","onChange","currentTarget","value","id","placeholder","shopnameerr","defaultValue","map","index","areaerr","categoryerr","target","openingdateerr","min","closingdateerr","Navbar","to","ShopList","props","dataArray","shopDataArray","todayDate","Date","toISOString","slice","splice","i","style","cursor","ViewShops","areaSelected","areaFilter","categorySelected","categoryFilter","statusSelected","statusFilter","filteredArray","filter","App","path","areaFilterReducer","action","categoryFilterReducer","statusFilterReducer","initial_state","setShopDataReducer","initial_array","shopDataArrayReducer","newarray","rootReducer","combineReducers","mystore","createStore","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.b11ff202.chunk.js","sourcesContent":["import { useHistory } from \"react-router\";\r\nimport \"../css/home.css\"\r\nlet Home = () => {\r\n    let history=useHistory();\r\n  return (\r\n    <div>\r\n      <div className=\"main-container\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"col-xl-3 col-lg-3 col-md-6 col-sm-12 mx-auto\">\r\n            <div className=\"home-container\">\r\n              <h1>WELCOME!</h1>\r\n              <h3>SHOP-LIST</h3>\r\n              <button\r\n                onClick={() => {\r\n                  history.push(\"/addShop\");\r\n                }}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                ADD NEW SHOP\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  history.push(\"/viewShops\");\r\n                }}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                VIEW ALL SHOPS\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","export const AREA_SELECTED=\"AREA_SELECTED\";\r\nexport const CATEGORY_SELECTED=\"CATEGORY_SELECTED\";\r\nexport const SHOP_DATA=\"SHOP_DATA\";\r\nexport const SHOP_DATA_ARRAY=\"SHOP_DATA_ARRAY\";\r\nexport const SHOP_DATA_ARRAY_DELETE=\"SHOP_DATA_ARRAY_DELETE\";\r\nexport const AREA_FILTER = \"AREA_FILTER\";\r\nexport const CATEGORY_FILTER = \"CATEGORY_FILTER\";\r\nexport const STATUS_FILTER=\"STATUS_FILTER\";\r\nexport const RESET_DATA=\"RESET_DATA\";","import {\r\n  AREA_FILTER,\r\n  AREA_SELECTED,\r\n  CATEGORY_FILTER,\r\n  CATEGORY_SELECTED,\r\n  RESET_DATA,\r\n  SHOP_DATA,\r\n  SHOP_DATA_ARRAY,\r\n  SHOP_DATA_ARRAY_DELETE,\r\n  STATUS_FILTER,\r\n} from \"./constants\";\r\n\r\nexport const areaaction = (value) => {\r\n  return {\r\n    type: AREA_SELECTED,\r\n    payload: value,\r\n  };\r\n};\r\nexport const categoryaction = (value) => {\r\n  return {\r\n    type: CATEGORY_SELECTED,\r\n    payload: value,\r\n  };\r\n};\r\nexport const setshopdata = (obj) => {\r\n  return {\r\n    type: SHOP_DATA,\r\n    payload: obj,\r\n  };\r\n};\r\nexport const shopdataarray = (obj) => {\r\n  return {\r\n    type: SHOP_DATA_ARRAY,\r\n    payload: obj,\r\n  };\r\n};\r\nexport const shopdataarraydelete = (obj) => {\r\n  return {\r\n    type: SHOP_DATA_ARRAY_DELETE,\r\n    payload: obj,\r\n  };\r\n};\r\n\r\nexport const areafilter = (value) => {\r\n  return {\r\n    type: AREA_FILTER,\r\n    payload: value,\r\n  };\r\n};\r\nexport const categoryfilter = (value) => {\r\n  return {\r\n    type: CATEGORY_FILTER,\r\n    payload: value,\r\n  };\r\n};\r\nexport const statusfilter = (value) => {\r\n  return {\r\n    type: STATUS_FILTER,\r\n    payload: value,\r\n  };\r\n};\r\nexport const resetdata = () => {\r\n  return {\r\n    type: RESET_DATA,\r\n  };\r\n};\r\n","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport \"../css/addshop.css\";\r\nimport { resetdata, setshopdata, shopdataarray } from \"../redux/actions\";\r\nlet AddShop = () => {\r\n  let areaArray = [\r\n    \"None\",\r\n    \"Thane\",\r\n    \"Pune\",\r\n    \"Mumbai Suburban\",\r\n    \"Nashik\",\r\n    \"Nagpur\",\r\n    \"Ahmednagar\",\r\n    \"Solapur\",\r\n  ];\r\n  let categoryArray = [\r\n    \"Grocery\",\r\n    \"Butcher\",\r\n    \"Baker\",\r\n    \"Chemist\",\r\n    \"Stationery shop\",\r\n  ];\r\n  let dispatch = useDispatch();\r\n  let history = useHistory();\r\n  let minDate = \"1980-01-01\";\r\n  let data = useSelector((state) => state.shopData);\r\n  console.log(data);\r\n  let [formErrors, setFormErrors] = useState({});\r\n  // let [isFormValid,setIsFormValid]=useState(true);\r\n  let handleformvalidation = () => {\r\n    const { shop_name, area, category, opening_date, closing_date } = data;\r\n    let formErrors = {};\r\n    let isformValid = true;\r\n    if (!shop_name) {\r\n      isformValid = false;\r\n      formErrors[\"shopnameerr\"] = \"Shop Name is required\";\r\n    }\r\n    if (shop_name) {\r\n      let regEx = /^[A-Za-z ]+$/;\r\n      if (!shop_name.match(regEx)) {\r\n        isformValid = false;\r\n        formErrors[\"shopnameerr\"] = \"Alphabets Only\";\r\n      }\r\n    }\r\n    if (!area) {\r\n      isformValid = false;\r\n      formErrors[\"areaerr\"] = \"Select Area\";\r\n    }\r\n    if (!category) {\r\n      isformValid = false;\r\n      formErrors[\"categoryerr\"] = \"Select Category\";\r\n    }\r\n    if (!opening_date) {\r\n      isformValid = false;\r\n      formErrors[\"openingdateerr\"] = \"Select Date\";\r\n    }\r\n    if (!closing_date) {\r\n      isformValid = false;\r\n      formErrors[\"closingdateerr\"] = \"Select Date\";\r\n    }\r\n    setFormErrors(formErrors);\r\n    return isformValid;\r\n  };\r\n  let handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (handleformvalidation()) {\r\n      dispatch(shopdataarray(data));\r\n      alert(\"Shop Added\");\r\n      dispatch(resetdata());\r\n      history.push(\"/\");\r\n    } else {\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"addshopmain-container\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"addshop-container col-xl-6 col-lg-6 col-md-6 col-sm-12 mx-auto\">\r\n            <form>\r\n              <div className=\"form-group row\">\r\n                <label\r\n                  htmlFor=\"inputshopname\"\r\n                  className=\"col-sm-3 col-form-label\"\r\n                >\r\n                  Shop Name :\r\n                </label>\r\n                <div className=\"col-sm-4\">\r\n                  <input\r\n                    onChange={(e) => {\r\n                      dispatch(\r\n                        setshopdata({ shop_name: e.currentTarget.value })\r\n                      );\r\n                    }}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"inputshopname\"\r\n                    placeholder=\"Shop Name\"\r\n                  />\r\n                  {formErrors.shopnameerr ? (\r\n                    <p>{formErrors.shopnameerr}</p>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <label htmlFor=\"inputarea\" className=\"col-sm-3 col-form-label\">\r\n                  Area :\r\n                </label>\r\n                <div className=\"col-sm-4\">\r\n                  <select\r\n                    onChange={(e) => {\r\n                      dispatch(setshopdata({ area: e.currentTarget.value }));\r\n                    }}\r\n                    className=\"form-select\"\r\n                    aria-label=\"Default select example\"\r\n                  >\r\n                    <option defaultValue>Select ...</option>\r\n                    {areaArray.map((e, index) => {\r\n                      return (\r\n                        <option key={index} value={e}>\r\n                          {e}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                  {formErrors.areaerr ? <p>{formErrors.areaerr}</p> : \"\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <label\r\n                  htmlFor=\"inputcategory\"\r\n                  className=\"col-sm-3 col-form-label\"\r\n                >\r\n                  Category :\r\n                </label>\r\n                <div className=\"col-sm-4\">\r\n                  <select\r\n                    onChange={(e) => {\r\n                      dispatch(\r\n                        setshopdata({ category: e.currentTarget.value })\r\n                      );\r\n                    }}\r\n                    className=\"form-select\"\r\n                    aria-label=\"Default select example\"\r\n                  >\r\n                    <option defaultValue>Select ...</option>\r\n                    {categoryArray.map((e, index) => {\r\n                      return (\r\n                        <option key={index} value={e}>\r\n                          {e}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                  {formErrors.categoryerr ? (\r\n                    <p>{formErrors.categoryerr}</p>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <label\r\n                  htmlFor=\"inputopeningdate\"\r\n                  className=\"col-sm-3 col-form-label\"\r\n                >\r\n                  Opening Date :\r\n                </label>\r\n                <div className=\"col-sm-4\">\r\n                  <input\r\n                    onChange={(e) => {\r\n                      dispatch(setshopdata({ opening_date: e.target.value }));\r\n                    }}\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    id=\"inputopeningdate\"\r\n                  />\r\n                  {formErrors.openingdateerr ? (\r\n                    <p>{formErrors.openingdateerr}</p>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <label\r\n                  htmlFor=\"inputenddate\"\r\n                  className=\"col-sm-3 col-form-label\"\r\n                >\r\n                  Ending Date :\r\n                </label>\r\n                <div className=\"col-sm-4\">\r\n                  <input\r\n                    onChange={(e) => {\r\n                      dispatch(setshopdata({ closing_date: e.target.value }));\r\n                    }}\r\n                    type=\"date\"\r\n                    min={data.opening_date ? data.opening_date : minDate}\r\n                    className=\"form-control\"\r\n                    id=\"inputenddate\"\r\n                  />\r\n                  {formErrors.closingdateerr ? (\r\n                    <p>{formErrors.closingdateerr}</p>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <button\r\n              onClick={(e) => {\r\n                handleSubmit(e);\r\n              }}\r\n              type=\"submit\"\r\n              value=\"Submit\"\r\n              className=\"btn btn-primary\"\r\n            >\r\n              Save\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default AddShop;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nlet Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-dark\">\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          Shop List\r\n        </Link>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nexport default Navbar;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { shopdataarraydelete } from \"../redux/actions\";\r\nimport \"../css/shopList.css\"\r\nlet ShopList = (props) => {\r\n  let dataArray = useSelector((state) => state.shopDataArray);\r\n  let dispatch=useDispatch();\r\n  let todayDate = new Date().toISOString().slice(0, 10);\r\n \r\n  return (\r\n    <>\r\n      <div className=\"shop-list\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-xl-2 col-lg-2 col-md-2 col-sm-6 col-sx-6 content\">\r\n            {props.data.shop_name}\r\n          </div>\r\n          <div className=\"col-xl-2 col-lg-2 col-md-2 col-sm-6 col-sx-6 content\">\r\n            {props.data.area}\r\n          </div>\r\n          <div className=\"col-xl-2 col-lg-2 col-md-2 col-sm-6 col-sx-6 content\">\r\n            {props.data.category}\r\n          </div>\r\n          <div className=\"col-xl-2 col-lg-2 col-md-2 col-sm-6 col-sx-6 content\">\r\n            {props.data.opening_date <= todayDate &&\r\n            props.data.closing_date >= todayDate\r\n              ? \"Open\"\r\n              : \"Close\"}\r\n          </div>\r\n          <div className=\"col-xl-2 col-lg-2 col-md-2 col-sm-6 col-sx-6 content\">\r\n            <span\r\n              onClick={(e) => {\r\n                dataArray.splice(props.i, 1);\r\n                dispatch(shopdataarraydelete(dataArray));\r\n              }}\r\n              className=\"material-icons-outlined\"\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              delete\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ShopList;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"../css/viewShops.css\";\r\nimport { areafilter, categoryfilter, statusfilter } from \"../redux/actions\";\r\nimport ShopList from \"./shopList\";\r\nlet ViewShops = () => {\r\n  let areaArray = [\r\n    \"NONE\",\r\n    \"Thane\",\r\n    \"Pune\",\r\n    \"Mumbai Suburban\",\r\n    \"Nashik\",\r\n    \"Nagpur\",\r\n    \"Ahmednagar\",\r\n    \"Solapur\",\r\n  ];\r\n  let categoryArray = [\r\n    \"NONE\",\r\n    \"Grocery\",\r\n    \"Butcher\",\r\n    \"Baker\",\r\n    \"Chemist\",\r\n    \"Stationery shop\",\r\n  ];\r\n  let statusArray = [\"NONE\", \"Open\", \"Close\"];\r\n  let dataArray = useSelector((state) => state.shopDataArray);\r\n  let dispatch = useDispatch();\r\n  let areaSelected = useSelector((state) => state.areaFilter);\r\n  let categorySelected = useSelector((state) => state.categoryFilter);\r\n  let statusSelected = useSelector((state) => state.statusFilter);\r\n  let todayDate = new Date().toISOString().slice(0, 10);\r\n  let filteredArray = dataArray.filter((e) => {\r\n    if (areaSelected === \"NONE\" || areaSelected === \"Select ...\") return true;\r\n    else if (e.area === areaSelected) return true;\r\n    else \r\n    return false\r\n  });\r\n  dataArray = filteredArray;\r\n  filteredArray = dataArray.filter((e) => {\r\n    if (categorySelected === \"NONE\" || categorySelected === \"Select ...\")\r\n      return true;\r\n    else if (e.category === categorySelected) return true;\r\n    else return false;\r\n  });\r\n  dataArray = filteredArray;\r\n  filteredArray = dataArray.filter((e) => {\r\n    if (statusSelected === \"NONE\" || statusSelected === \"Select ...\")\r\n      return true;\r\n    else if (statusSelected === \"Open\") {\r\n      if (e.opening_date <= todayDate && e.closing_date >= todayDate)\r\n        return true;\r\n      else return false;\r\n    } else if (statusSelected === \"Close\") {\r\n      if (e.closing_date < todayDate || e.opening_date > todayDate) return true;\r\n      else return false;\r\n    } else return false;\r\n  });\r\n  dataArray = filteredArray;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"viewshopsmain-container\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"viewshops-container\">\r\n            <div className=\"filter-container row\">\r\n              <div className=\"col-xs-12 col-sm-12 col-md-12 filter\">\r\n                <div className=\"m-2\">\r\n                  <label htmlFor=\"inputarea\" className=\" col-form-label\">\r\n                    Area\r\n                  </label>{\" \"}\r\n                  <select\r\n                    onChange={(e) => {\r\n                      dispatch(areafilter(e.currentTarget.value));\r\n                    }}\r\n                    className=\"form-select\"\r\n                    aria-label=\"Default select example\"\r\n                  >\r\n                    <option defaultValue>Select ...</option>\r\n                    {areaArray.map((e,index) => {\r\n                      return <option key={index} value={e}>{e}</option>;\r\n                    })}\r\n                  </select>\r\n                </div>\r\n                <div className=\"m-2\">\r\n                  <label htmlFor=\"inputcategory\" className=\" col-form-label\">\r\n                    Category\r\n                  </label>\r\n                  <select\r\n                    onChange={(e) => {\r\n                      dispatch(categoryfilter(e.currentTarget.value));\r\n                    }}\r\n                    className=\"form-select\"\r\n                    aria-label=\"Default select example\"\r\n                  >\r\n                    <option defaultValue>Select ...</option>\r\n                    {categoryArray.map((e,index) => {\r\n                      return <option key={index} value={e}>{e}</option>;\r\n                    })}\r\n                  </select>\r\n                </div>\r\n                <div className=\"m-2\">\r\n                  <label htmlFor=\"inputstatus\" className=\"col-form-label\">\r\n                    Status\r\n                  </label>\r\n                  <select\r\n                    onChange={(e) => {\r\n                      dispatch(statusfilter(e.currentTarget.value));\r\n                    }}\r\n                    className=\"form-select\"\r\n                    aria-label=\"Default select example\"\r\n                  >\r\n                    <option defaultValue>Select ...</option>\r\n                    {statusArray.map((e,index) => {\r\n                      return <option key={index} value={e}>{e}</option>;\r\n                    })}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"shoplist-container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-11 mx-auto\">\r\n                  {dataArray.map((e, index) => {\r\n                    return <ShopList key={index} i={index} data={e} />;\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ViewShops;\r\n","import Home from \"./components/home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport AddShop from \"./components/addShop\";\nimport Navbar from \"./components/navbar\";\nimport ViewShops from \"./components/viewShops\";\nlet App = () => {\n  return (\n    <>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path=\"/viewShops\">\n            <ViewShops />\n          </Route>\n          <Route path=\"/addShop\">\n            <AddShop />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n};\nexport default App;\n","import { AREA_FILTER } from \"../constants\";\r\n\r\nlet areaFilterReducer=(state=\"NONE\",action)=>{\r\n    switch(action.type){\r\n        case AREA_FILTER:\r\n            return action.payload;\r\n            default:\r\n                return state;\r\n    }\r\n}\r\nexport default areaFilterReducer;","import { CATEGORY_FILTER } from \"../constants\";\r\n\r\nlet categoryFilterReducer = (state = \"NONE\", action) => {\r\n  switch (action.type) {\r\n    case CATEGORY_FILTER:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default categoryFilterReducer;\r\n","import { STATUS_FILTER } from \"../constants\";\r\n\r\nlet statusFilterReducer = (state = \"NONE\", action) => {\r\n  switch (action.type) {\r\n    case STATUS_FILTER:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default statusFilterReducer;\r\n","import { RESET_DATA, SHOP_DATA } from \"../constants\";\r\n\r\nlet initial_state = {\r\n  shop_name: \"\",\r\n  area: \"\",\r\n  category: \"\",\r\n  opening_date: \"\",\r\n  closing_date: \"\",\r\n};\r\nlet setShopDataReducer = (state = initial_state, action) => {\r\n  switch (action.type) {\r\n    case RESET_DATA:\r\n      return initial_state;\r\n    case SHOP_DATA:\r\n      return { ...state, ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default setShopDataReducer;","import { SHOP_DATA_ARRAY, SHOP_DATA_ARRAY_DELETE } from \"../constants\";\r\n\r\nlet initial_array = [];\r\nlet shopDataArrayReducer = (state = initial_array, action) => {\r\n  switch (action.type) {\r\n    case SHOP_DATA_ARRAY:\r\n      initial_array.push(action.payload);\r\n      return initial_array;\r\n    case SHOP_DATA_ARRAY_DELETE:\r\n      const newarray = [...action.payload];\r\n      initial_array=newarray\r\n      return initial_array;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default shopDataArrayReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport areaFilterReducer from \"./areaFilterReducer\";\r\nimport categoryFilterReducer from \"./categoryFilterReducer\";\r\nimport statusFilterReducer from \"./statusFilterReducer\";\r\nimport setShopDataReducer from \"./setShopDataReducer\";\r\nimport shopDataArrayReducer from \"./shopDataArrayReducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n  shopData: setShopDataReducer,\r\n  shopDataArray: shopDataArrayReducer,\r\n  areaFilter: areaFilterReducer,\r\n  categoryFilter:categoryFilterReducer,\r\n  statusFilter:statusFilterReducer,\r\n});\r\nexport default rootReducer;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./redux/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\n\nlet mystore = createStore(rootReducer);\nReactDOM.render(\n  <Provider store={mystore}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}